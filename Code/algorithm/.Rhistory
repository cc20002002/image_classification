#myfiles=t(myfiles)
require('data.table')
myfiles2$algorithm=c('Expectation Maximisation with PCA','Relabelling with PCA','Importance Reweighting with PCA')
myfiles2$dataset=c('CIFAR','CIFAR','CIFAR')
df1=melt(myfiles2, id=17:18)
df1[seq(1,48,by=3),5]=round(35.5/16)
df1[seq(2,48,by=3),5]=round(195.5/16)
df1[seq(3,48,by=3),5]=round(222.2/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
df2$`Average running time (seconds)`=as.numeric(as.character(df2$`Average running time (seconds)`))
df22=df2
save(list='df22',file = 'pca')
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles=myfiles[-1,]
myfiles2=myfiles[4:6,]
#myfiles=t(myfiles)
require('data.table')
myfiles2$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles2$dataset=c('CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
df1=melt(myfiles2, id=17:18)
df1[seq(1,48,by=3),5]=round(35.5/16)
df1[seq(2,48,by=3),5]=round(195.5/16)
df1[seq(3,48,by=3),5]=round(222.2/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
df2$`Average running time (seconds)`=as.numeric(as.character(df2$`Average running time (seconds)`))
df22=df2
save(list='df22',file = 'pca')
myfiles2
ks.test(myfiles2[1,1:16],t(myfiles2[2,1:16]))# em vs relabeling
ks.test(myfiles2[1,1:16],t(myfiles2[3,1:16]))# em vs reweighting
ks.test(myfiles2[3,1:16],t(myfiles2[2,1:16]))# labeling vs reweighting
mean.fun <- function(dat, idx) mean(dat[idx], na.rm = TRUE)
myfiles2
for (i in 1:3){
bootobject <- boot(data=myfiles2[i,1:16],R=1000,statistic=mean.fun)
a=boot.ci(bootobject, type='perc' )
df32[i,]$CIl=a$percent[4]
df32[i,]$CIu=a$percent[5]
}
df4=round(df3,3)
df42=round(df32,3)
require('boot')
for (i in 1:3){
bootobject <- boot(data=myfiles2[i,1:16],R=1000,statistic=mean.fun)
a=boot.ci(bootobject, type='perc' )
df32[i,]$CIl=a$percent[4]
df32[i,]$CIu=a$percent[5]
}
myfiles2[i,1:16]
df1[seq(i,96,by=6),4]
df1
for (i in 1:3){
bootobject <- boot(data=myfiles2[i,1:16],R=1000,statistic=mean.fun)
a=boot.ci(bootobject, type='perc' )
df32[i,]$CIl=a$percent[4]
df32[i,]$CIu=a$percent[5]
}
df4=round(df3,3)
myfiles2[i,1:16]
bootobject <- boot(data=myfiles2[i,1:16],R=1000,statistic=mean.fun)
warnings()
mean.fun <- function(dat, idx) mean(dat[idx], na.rm = TRUE)
bootobject <- boot(data=myfiles2[i,1:16],R=1000,statistic=mean.fun)
myfiles2[i,1:16]
myfiles2[i,1:16][1]
as.vector(myfiles2[i,1:16])
df1[seq(i,96,by=6),4]
myfiles2[i,1:16]
rbind(myfiles2[i,1:16])
myfiles2[i,1:16][1,]
myfiles2[i,1:16][1,1:16]
myfiles2[i,1:16]''
t(myfiles2[i,1:16])
t(myfiles2[i,1:16])
t(myfiles2[i,1:16])$5
t(myfiles2[i,1:16])$'5'
t(myfiles2[i,1:16])$`5`
t(myfiles2[i,1:16])
tt=t(myfiles2[i,1:16])
tt
tt[,1]
tt[[1]]
tt[['5']]
tt['5']
myfiles2[i,1:16]
tt
tt[,'5']
myfiles2[i,1:16]
bootobject <- boot(data=myfiles2[i,1:16],R=1000,statistic=mean.fun)
warnings()
bootobject <- boot(data=as.numeric(myfiles2[i,1:16]),R=1000,statistic=mean.fun)
for (i in 1:3){
bootobject <- boot(data=as.numeric(myfiles2[i,1:16]),R=1000,statistic=mean.fun)
a=boot.ci(bootobject, type='perc' )
df32[i,]$CIl=a$percent[4]
df32[i,]$CIu=a$percent[5]
}
df32=myfiles
df32
df32=myfiles[1:3,1:2]
df3
df32
df32=myfiles[1:3,1:2]
for (i in 1:3){
bootobject <- boot(data=as.numeric(myfiles2[i,1:16]),R=1000,statistic=mean.fun)
a=boot.ci(bootobject, type='perc' )
df32[i,]$CIl=a$percent[4]
df32[i,]$CIu=a$percent[5]
}
df32
for (i in 1:3){
bootobject <- boot(data=as.numeric(myfiles2[i,1:16]),R=1000,statistic=mean.fun)
a=boot.ci(bootobject, type='perc' )
df32[i,1]=a$percent[4]
df32[i,2]=a$percent[5]
}
df32
ks.test(myfiles2[1,1:16],t(myfiles2[2,1:16]))# em vs relabeling
ks.test(myfiles2[1,1:16],t(myfiles2[3,1:16]))# em vs reweighting
ks.test(myfiles2[3,1:16],t(myfiles2[2,1:16]))# labeling vs reweighting
df42
df323
df32
myfiles2
rowMeans(myfiles2(,1:16))
rowMeans(myfiles2[,1:16])
apply((myfiles2[,1:16],1,sd)
apply(myfiles2[,1:16],1,sd)
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles
myfiles=do.call(rbind,myfiles)
myfiles
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
temp
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
myfiles
df1=melt(myfiles, id=17:18)
df1
temp
myfiles$variable=as.numeric(myfiles$variable)
data=seq(10000,2000,by=-1000)
data
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$variable[seq(1,54,by=9)]=data
}
data
myfiles$variable[seq(i,54,by=9)]
myfiles$variable
myfiles
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
myfiles$variable=as.numeric(myfiles$variable)
myfiles$data_size=1
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$variable[seq(i,54,by=9)]=data
}
myfiles$variable[seq(i,54,by=9)]
data
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=9)]=data
}
myfiles$data_size[seq(i,54,by=9)]
data
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
myfiles
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
df1=melt(myfiles, id=17:18)
myfiles$variable=as.numeric(myfiles$variable)
myfiles$data_size=1
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
df1=melt(myfiles, id=17:18)
myfiles$data_size=1
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
df1
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$data_size=1
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
df1=melt(myfiles, id=17:18)
df1
myfiles
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
df1=melt(myfiles, id=17:18)
df1
ggplot(myfiles, aes(data_size, value,color=algorithm)) +
geom_point() +
geom_smooth()
ggplot(df1, aes(data_size, value,color=algorithm)) +
geom_point() +
geom_smooth()
warnings()
ggplot(df1, aes(x=data_size, y=value,color=algorithm)) +
geom_point() +
geom_smooth()
warnings()
df1
df1=df1[,c(1,2,4)]
ggplot(df1, aes(x=data_size, y=value,color=algorithm)) +
geom_point() +
geom_smooth()
df1
ggplot(df1, aes(x=data_size, y=value,colour=algorithm)) +
geom_point() +
geom_smooth()
warnings()
df1=melt(myfiles, id=17:18)
df1
myfiles
df1=melt(myfiles, id=18:19)
df1=df1[,c(1,2,4)]
df1=melt(myfiles, id=18:19)
df1
df1=melt(myfiles, id=17:19)
df1
df1=df1[,c(1,2,3,5)]
df1
ggplot(df1, aes(x=data_size, y=value,colour=algorithm,fill=dataset)) +
geom_point() +
geom_smooth()
df1
df1$names
df1$name
df1
names(df1)
names(df1)=c( "Data size", "Algorithm", "Data set",   "Accuracy"   )
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4, units = "in")
temp
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles
54*16
myfiles
temp
gsub(pattern = 'sec.csv',replacement = '')
gsub(pattern = 'sec.csv',replacement = '',x=myfiles)
gsub(pattern = 'sec.csv',replacement = '',x=temp)
?gsub]
?gsub
grep(pattern = '...$',x = temp)
grep(pattern = '......$',x = temp)
grep(pattern = '......$',x = temp)
temp
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
grep(pattern = '......$',x = temp2)
require('stringr')
?str_sub
str_sub(temp2, start = 17, end = -1L)
str_sub(temp2, start = 22, end = -1L)
str_sub(temp2, start = 20, end = -1L)
temp3=gsub("[^0-9]", "", temp2)
temp3
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=gsub("[^0-9]", "", temp2)
temp3
temp3=gsub("[^0-9.]", "", temp2)
temp3
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
temp3
myfiles
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles
myfiles$runningtime=temp3
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
myfiles
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
myfiles
df1=melt(myfiles, id=17:20)
df1
df1=df1[,c(1,2,3,4,6)]
df1
ggplot(df1[1:54,], aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
names(df1)=c( "Data size", "Algorithm", "Data set",   "Accuracy"   )
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
df1=melt(myfiles, id=17:20)
df1=df1[,c(1,2,3,4,6)]
names(df1)=c( "Data size", "Algorithm", "Data set",   "Accuracy"   )
ggplot(df1[1:54,], aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
names
df1
names(df1)=c( "Data size", "Algorithm", "Data set",  'Running time', "Accuracy"   )
ggplot(df1[1:54,], aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4, units = "in")
df1
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 2500)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 2200)
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/60
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
df1=melt(myfiles, id=17:20)
df1=df1[,c(1,2,3,4,6)]
names(df1)=c( "Data size", "Algorithm", "Data set",  'Running time', "Accuracy"   )
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 2200)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 40)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 37)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 39)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`, group=`Data set`)) +
geom_point(shape=`Data set`)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`, group=`Data set`)) +
geom_point(aes(shape=`Data set`))
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`, group=`Data set`)) +
geom_point(aes(shape=`Data set`))+
geom_smooth()+ ylim(0, 39)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`))+
geom_smooth()+ ylim(0, 39)
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 5, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
names(df1)=c( "Data size", "Algorithm", "Data set",  'Average running time', "Accuracy"   )
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 5, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Average Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
names(df1)=c( "Data size", "Algorithm", "Data set",  'Average running time', "Accuracy"   )
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 5, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Average Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Average running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
names(df1)=c( "Sample size", "Algorithm", "Data set",  'Average running time (seconds)', "Accuracy"   )
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4.5, units = "in")
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Sample set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4.5, units = "in")
