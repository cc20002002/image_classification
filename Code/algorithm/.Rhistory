gsub(pattern = 'sec.csv',replacement = '',x=myfiles)
gsub(pattern = 'sec.csv',replacement = '',x=temp)
?gsub]
?gsub
grep(pattern = '...$',x = temp)
grep(pattern = '......$',x = temp)
grep(pattern = '......$',x = temp)
temp
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
grep(pattern = '......$',x = temp2)
require('stringr')
?str_sub
str_sub(temp2, start = 17, end = -1L)
str_sub(temp2, start = 22, end = -1L)
str_sub(temp2, start = 20, end = -1L)
temp3=gsub("[^0-9]", "", temp2)
temp3
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=gsub("[^0-9]", "", temp2)
temp3
temp3=gsub("[^0-9.]", "", temp2)
temp3
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
temp3
myfiles
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles
myfiles$runningtime=temp3
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
myfiles
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
myfiles
df1=melt(myfiles, id=17:20)
df1
df1=df1[,c(1,2,3,4,6)]
df1
ggplot(df1[1:54,], aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
names(df1)=c( "Data size", "Algorithm", "Data set",   "Accuracy"   )
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
df1=melt(myfiles, id=17:20)
df1=df1[,c(1,2,3,4,6)]
names(df1)=c( "Data size", "Algorithm", "Data set",   "Accuracy"   )
ggplot(df1[1:54,], aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
names
df1
names(df1)=c( "Data size", "Algorithm", "Data set",  'Running time', "Accuracy"   )
ggplot(df1[1:54,], aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4, units = "in")
df1
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 2500)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 2200)
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/60
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
df1=melt(myfiles, id=17:20)
df1=df1[,c(1,2,3,4,6)]
names(df1)=c( "Data size", "Algorithm", "Data set",  'Running time', "Accuracy"   )
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 2200)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 40)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 37)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()+ ylim(0, 39)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`, group=`Data set`)) +
geom_point(shape=`Data set`)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`, group=`Data set`)) +
geom_point(aes(shape=`Data set`))
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`, group=`Data set`)) +
geom_point(aes(shape=`Data set`))+
geom_smooth()+ ylim(0, 39)
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`))+
geom_smooth()+ ylim(0, 39)
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 5, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
names(df1)=c( "Data size", "Algorithm", "Data set",  'Average running time', "Accuracy"   )
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 5, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Average Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
names(df1)=c( "Data size", "Algorithm", "Data set",  'Average running time', "Accuracy"   )
ggplot(df1, aes(x=`Data size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 5, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Average Running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Data size`, y=`Average running time`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
names(df1)=c( "Sample size", "Algorithm", "Data set",  'Average running time (seconds)', "Accuracy"   )
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4.5, units = "in")
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Sample set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggsave(filename = 'accuracy.pdf',width = 7, height = 4.5, units = "in")
load("C:/Users/chenc/Documents/GitHub/image_classification/Code/algorithm/.RData")
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/60
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp2
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/60
temp3
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
temp2=gsub(pattern = 'sec_nopca.csv',replacement = '',x=temp)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/60
temp2
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/60
temp3
temp = list.files(pattern="*.csv")
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
temp2=gsub(pattern = 'sec_nopca.csv',replacement = '',x=temp2)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/60
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles
temp2
temp = list.files(pattern="*.csv")
temp
temp22=temp2[17:44]
temp22
temps = list.files(pattern="sec_nopca.csv")
temp = list.files(pattern="*.csv")
temps
setdiff(temp,temps)
temp = list.files(pattern="*.csv")
temps = list.files(pattern="sec_nopca.csv")
temp=setdiff(temp,temps)
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
temp22=gsub(pattern = 'sec_nopca.csv',replacement = '',x=temps)
temp2
temp22
temp2=str_sub(temp2, start = 20, end = -1L)
temp22=str_sub(temp22, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/16
temp32=as.numeric(gsub("[^0-9.]", "", temp2) )/16
temp
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp22=str_sub(temp22, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/16
temp32=as.numeric(gsub("[^0-9.]", "", temp2) )/16
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
myfiles
temp3
temp = list.files(pattern="*.csv")
temps = list.files(pattern="sec_nopca.csv")
temp=setdiff(temp,temps)
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
temp2
temp2=str_sub(temp2, start = 20, end = -1L)
temp22=str_sub(temp22, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/16
temp32=as.numeric(gsub("[^0-9.]", "", temp22) )/16
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
temp3
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
myfiles
temp32
temp32=as.numeric(gsub("[^0-9.]", "", temp22) )/16
temp32
temp22=str_sub(temp22, start = 20, end = -1L)
temp22
temp22=gsub(pattern = 'sec_nopca.csv',replacement = '',x=temps)
temps = list.files(pattern="sec_nopca.csv")
temp22=gsub(pattern = 'sec_nopca.csv',replacement = '',x=temps)
temp22
temp22=str_sub(temp22, start = 20, end = -1L)
temp32=as.numeric(gsub("[^0-9.]", "", temp22) )/16
temp32
myfiless = lapply(temps, read.csv,header=FALSE)
myfiless=do.call(rbind,myfiless)
myfiless$data_size=1
myfiless$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiless$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiless$`Running time`=temp32
data=seq(10000,2000,by=-1000)
myfiless$dataset=c('CIFAR without PCA','CIFAR without PCA','CIFAR without PCA')
myfiless = lapply(temps, read.csv,header=FALSE)
myfiless=do.call(rbind,myfiless)
myfiless$data_size=1
myfiless$algorithm=c('Expectation Maximisation','Relabelling')
myfiless$dataset=c('CIFAR without PCA','CIFAR without PCA','CIFAR without PCA')
myfiless$`Running time`=temp32
data=seq(10000,2000,by=-1000)
for (i in 1:3){
myfiles$data_size[seq(i,54,by=6)]=data
}
myfiless = lapply(temps, read.csv,header=FALSE)
myfiless=do.call(rbind,myfiless)
myfiless$data_size=1
myfiless$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting')
myfiless$dataset=c('CIFAR without PCA','CIFAR without PCA','CIFAR without PCA')
myfiless$`Running time`=temp32
data=seq(10000,2000,by=-1000)
for (i in 1:3){
myfiles$data_size[seq(i,54,by=6)]=data
}
myfiles
temp = list.files(pattern="*.csv")
temps = list.files(pattern="sec_nopca.csv")
temp=setdiff(temp,temps)
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
temp22=gsub(pattern = 'sec_nopca.csv',replacement = '',x=temps)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp22=str_sub(temp22, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/16
temp32=as.numeric(gsub("[^0-9.]", "", temp22) )/16
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
#############
myfiless = lapply(temps, read.csv,header=FALSE)
myfiless=do.call(rbind,myfiless)
myfiless$data_size=1
myfiless$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting')
myfiless$dataset=c('CIFAR without PCA','CIFAR without PCA','CIFAR without PCA')
myfiless$`Running time`=temp32
data=seq(10000,2000,by=-1000)
for (i in 1:3){
myfiless$data_size[seq(i,54,by=6)]=data
}
temp = list.files(pattern="*.csv")
temps = list.files(pattern="sec_nopca.csv")
temp=setdiff(temp,temps)
temp2=gsub(pattern = 'sec.csv',replacement = '',x=temp)
temp22=gsub(pattern = 'sec_nopca.csv',replacement = '',x=temps)
require('stringr')
temp2=str_sub(temp2, start = 20, end = -1L)
temp22=str_sub(temp22, start = 20, end = -1L)
temp3=as.numeric(gsub("[^0-9.]", "", temp2) )/16
temp32=as.numeric(gsub("[^0-9.]", "", temp22) )/16
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
myfiles$data_size=1
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR with PCA','CIFAR with PCA','CIFAR with PCA')
myfiles$`Running time`=temp3
data=seq(10000,2000,by=-1000)
for (i in 1:6){
myfiles$data_size[seq(i,54,by=6)]=data
}
#############
myfiless = lapply(temps, read.csv,header=FALSE)
myfiless=do.call(rbind,myfiless)
myfiless$data_size=1
myfiless$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting')
myfiless$dataset=c('CIFAR without PCA','CIFAR without PCA','CIFAR without PCA')
myfiless$`Running time`=temp32
data=seq(10000,2000,by=-1000)
for (i in 1:3){
myfiless$data_size[seq(i,27,by=6)]=data
}
for (i in 1:3){
myfiless$data_size[seq(i,27,by=3)]=data
}
myfiless
myfiles
myfiless
myfiles
temp
temps
myfiless
df1=melt(myfiles, id=17:20)
df1=df1[,c(1,2,3,4,6)]
names(df1)=c( "Data size", "Algorithm", "Data set",  'Running time', "Accuracy"   )
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
#################
require(ggplot2)
df1=melt(myfiles, id=17:20)
df1=df1[,c(1,2,3,4,6)]
names(df1)=c( "Data size", "Algorithm", "Data set",  'Running time', "Accuracy"   )
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
df1=melt(myfiles, id=17:20)
df1=df1[,c(1,2,3,4,6)]
names(df1)=c( "Sample size", "Algorithm", "Data set",  'Average running time (seconds)', "Accuracy"   )
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)+
geom_smooth()+ ylim(0, 39)
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=5)
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3)
names(df1)=c( "Sample size", "Algorithm", "Data set",  'Average running time (seconds)', "Accuracy"   )
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3)
#+geom_smooth()+ ylim(0, 39)
ggsave(filename = 'speed.pdf',width = 7, height = 4, units = "in")
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point() +
geom_smooth()
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`)) +
geom_smooth()
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth()
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(alpha=0.2)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(alpha=0.7)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(alpha=0.35)
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=`Data set`,fill=Algorithm)) +
geom_point(aes(shape=`Data set`),size=3)
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=`Data set`,fill=Algorithm)) +
geom_point(aes(shape=Algorithm),size=3)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=`Data set`,fill=Algorithm)) +
geom_point(aes(shape=Algorithm),size=3) +
geom_smooth(alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=`Data set`,fill=Algorithm)) +
geom_point(aes(shape=Algorithm),size=3)
ggplot(df1, aes(x=`Sample size`, y=`Average running time (seconds)`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(aes(...,fill = Algorithm),alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(aes(fill = Algorithm),alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(aes(),alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(fill=Algorithm,alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(fill=colour,alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(aes(fill=Algorithm,color=`Data set`),alpha=0.5)
ggplot(df1, aes(x=`Sample size`, y=`Accuracy`,colour=Algorithm,fill=`Data set`)) +
geom_point(aes(shape=`Data set`),size=3) +
geom_smooth(alpha=0.5)
myfiless
temp32
temps
