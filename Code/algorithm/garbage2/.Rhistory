require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")
ggsave(filename = 'boxplot.pdf',width = 8, height = 5, units = "in")
Datasets=unique(df2$Dataset)
plots=list()
require('dplyr')
for (nn in Datasets){
g=ggplot(df2 %>% filter(Dataset==nn), aes(x=Accuracy, fill=Algorithm)) +
geom_density(alpha=0.5, position="identity")+
ylab("Probability density")
plots=c(plots,list(g+theme(legend.position="none")))
}
require('cowplot')
legend <- get_legend(g+theme(legend.position="top"))
plot_grid(plotlist = plots, labels=Datasets,hjust =c(-1,-1),vjust=c(2,2)) +
theme(plot.margin=unit(c(1,0,0,0),"cm"))+
draw_grob(legend, .45, .53, .3/3.3, 1)
ggsave(filename = 'histo.pdf',width = 7, height = 4.6, units = "in")
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(fill=guide_legend(nrow=2,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(fill=guide_legend(nrow=2))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(fill=guide_legend(ncol=2))
?guide_legend
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(fill=guide_legend(ncol=2, byrow = T))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(fill=guide_legend(ncol=2, byrow = F))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(colour=guide_legend(ncol=2,nrow=2,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(colour=guide_legend(ncol=2,nrow=1,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(colour=guide_legend(ncol=2,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(colour=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=3,nrow=1,byrow=TRUE),color=guide_legend(ncol=3,nrow=1,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h=0)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
?geom_boxplot
?scale_fill_hue
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=180)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=90)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=270)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=50, c=100,h.start=225)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=225)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=300)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggsave(filename = 'boxplot.pdf',width = 7, height = 7, units = "in")
Datasets=unique(df2$Dataset)
plots=list()
require('dplyr')
for (nn in Datasets){
g=ggplot(df2 %>% filter(Dataset==nn), aes(x=Accuracy, fill=Algorithm)) +
geom_density(alpha=0.5, position="identity")+
ylab("Probability density")
plots=c(plots,list(g+theme(legend.position="none")))
}
require('cowplot')
legend <- get_legend(g+theme(legend.position="top"))
plot_grid(plotlist = plots, labels=Datasets,hjust =c(-1,-1),vjust=c(2,2)) +
theme(plot.margin=unit(c(1,0,0,0),"cm"))+
draw_grob(legend, .45, .53, .3/3.3, 1)
ggsave(filename = 'histo.pdf',width = 7, height = 4.6, units = "in")
#reweighting is better than em is better than relabelling
ks.test(myfiles[5,1:16],t(myfiles[4,1:16]))# em vs relabeling
ks.test(myfiles[4,1:16],t(myfiles[6,1:16]))# em vs reweighting
ks.test(myfiles[5,1:16],t(myfiles[6,1:16]))# labeling vs reweighting
#relabelling is more accuracy than em
ks.test(myfiles[1,1:16],t(myfiles[2,1:16]))# em vs reweighting
ks.test(myfiles[1,1:16],t(myfiles[3,1:16]))# em vs relabeling
ks.test(myfiles[3,1:16],t(myfiles[2,1:16]))# labeling vs reweighting
require('boot')
df3=myfiles
df3$Mean=rowMeans((df3[,1:16]))
df3$Sd=apply(df3[,1:16],1,sd)
mean.fun <- function(dat, idx) mean(dat[idx], na.rm = TRUE)
for (i in 1:6){
bootobject <- boot(data=df1[seq(i,96,by=6),4],R=1000,statistic=mean.fun)
a=boot.ci(bootobject, type='perc' )
df3[i,]$CIl=a$percent[4]
df3[i,]$CIu=a$percent[5]
}
df4=round(df3,3)
fwrite(df4,file = 'meansd.csv')
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggsave(filename = 'boxplot.pdf',width = 7, height = 5, units = "in")
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggsave(filename = 'boxplot.pdf',width = 7, height = 5, units = "in")
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))
ggsave(filename = 'boxplot.pdf',width = 7, height = 5, units = "in")
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$x, n = 10)) +
scale_y_continuous(breaks = pretty(df2$y, n = 10))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
df2$Accuracy
df2$`Average running time (seconds)`
df2$`Average running time (seconds)`=as.numeric(df2$`Average running time (seconds)`)
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
df2$`Average running time (seconds)`
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
df2$`Average running time (seconds)`
as.character(df2$`Average running time (seconds)`)
as.numeric(as.character(df2$`Average running time (seconds)`))
df2$`Average running time (seconds)`=as.numeric(as.character(df2$`Average running time (seconds)`))
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggsave(filename = 'boxplot.pdf',width = 7, height = 6, units = "in")
ggsave(filename = 'boxplot.pdf',width = 7, height = 6, units = "in")
ggsave(filename = 'boxplot.pdf',width = 7, height = 7, units = "in")
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=2,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
df2$`Average running time (seconds)`=as.numeric(as.character(df2$`Average running time (seconds)`))
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggsave(filename = 'boxplot.pdf',width = 5, height = 5, units = "in")
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
df2$`Average running time (seconds)`=as.numeric(as.character(df2$`Average running time (seconds)`))
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggsave(filename = 'boxplot.pdf',width = 6, height = 6, units = "in")
temp = list.files(pattern="*.csv")
temp=temp[-1]
myfiles = lapply(temp, read.csv,header=FALSE)
myfiles=do.call(rbind,myfiles)
#myfiles=t(myfiles)
require('data.table')
myfiles$algorithm=c('Expectation Maximisation','Relabelling','Importance Reweighting','Expectation Maximisation','Relabelling','Importance Reweighting')
myfiles$dataset=c('MNIST','MNIST','MNIST','CIFAR','CIFAR','CIFAR')
df1=melt(myfiles, id=17:18)
df1[seq(1,96,by=6),5]=round(209.2031/16)
df1[seq(2,96,by=6),5]=round(942.7264/16)
df1[seq(3,96,by=6),5]=round(1059.5852/16)
df1[seq(4,96,by=6),5]=round(812.642/16)
df1[seq(5,96,by=6),5]=round(3742.079/16)
df1[seq(6,96,by=6),5]=round(4208.5504/16)
df1[,5]=as.factor(df1[,5])
names(df1)=c("Algorithm" ,"Dataset",   "Average running time (seconds)",  "Accuracy", "Average running time (seconds)" )
df2=df1[,c(1,2,4,5)]
require('ggplot2')
library(ggthemes)
df2$`Average running time (seconds)`=as.numeric(as.character(df2$`Average running time (seconds)`))
theme_set(theme_bw())  # from ggthemes
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggsave(filename = 'boxplot.pdf',width = 7, height = 7, units = "in")
Datasets=unique(df2$Dataset)
plots=list()
require('dplyr')
for (nn in Datasets){
g=ggplot(df2 %>% filter(Dataset==nn), aes(x=Accuracy, fill=Algorithm)) +
geom_density(alpha=0.5, position="identity")+
ylab("Probability density")
plots=c(plots,list(g+theme(legend.position="none")))
}
require('cowplot')
legend <- get_legend(g+theme(legend.position="top"))
plot_grid(plotlist = plots, labels=Datasets,hjust =c(-1,-1),vjust=c(2,2)) +
theme(plot.margin=unit(c(1,0,0,0),"cm"))+
draw_grob(legend, .45, .53, .3/3.3, 1)
require('dplyr')
for (nn in Datasets){
g=ggplot(df2 %>% filter(Dataset==nn), aes(x=Accuracy, fill=Algorithm,y=..scaled..)) +
geom_density(alpha=0.5, position="identity")+
ylab("Probability density")
plots=c(plots,list(g+theme(legend.position="none")))
}
require('cowplot')
legend <- get_legend(g+theme(legend.position="top"))
plot_grid(plotlist = plots, labels=Datasets,hjust =c(-1,-1),vjust=c(2,2)) +
theme(plot.margin=unit(c(1,0,0,0),"cm"))+
draw_grob(legend, .45, .53, .3/3.3, 1)
for (nn in Datasets){
g=ggplot(df2 %>% filter(Dataset==nn), aes(x=Accuracy, fill=Algorithm)) +
geom_density(alpha=0.5, position="identity")+
ylab("Probability density")
plots=c(plots,list(g+theme(legend.position="none")))
}
require('cowplot')
legend <- get_legend(g+theme(legend.position="top"))
plot_grid(plotlist = plots, labels=Datasets,hjust =c(-1,-1),vjust=c(2,2)) +
theme(plot.margin=unit(c(1,0,0,0),"cm"))+
draw_grob(legend, .45, .53, .3/3.3, 1)
ggsave(filename = 'histo.pdf',width = 7, height = 4.6, units = "in")
plot_grid(plotlist = plots, labels=Datasets,hjust =c(-1,-1),vjust=c(2,2)) +
theme(plot.margin=unit(c(1,0,0,0),"cm"))+
draw_grob(legend, .45, .53, .3/3.3, 1)
plots=list()
require('dplyr')
for (nn in Datasets){
g=ggplot(df2 %>% filter(Dataset==nn), aes(x=Accuracy, fill=Algorithm)) +
geom_density(alpha=0.5, position="identity")+
ylab("Probability density")
plots=c(plots,list(g+theme(legend.position="none")))
}
require('cowplot')
legend <- get_legend(g+theme(legend.position="top"))
plot_grid(plotlist = plots, labels=Datasets,hjust =c(-1,-1),vjust=c(2,2)) +
theme(plot.margin=unit(c(1,0,0,0),"cm"))+
draw_grob(legend, .45, .53, .3/3.3, 1)
ggsave(filename = 'histo.pdf',width = 7, height = 4.6, units = "in")
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(fill=guide_legend(direction = "vertical",ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
?guide_legend
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(direction='vertical',fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
theme(legend.position="top")+
guides(direction='vertical',fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggsave(filename = 'boxplotv.pdf',width = 7, height = 7, units = "in")
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
coord_flip()+ theme(legend.position="top")+
guides(direction='vertical',fill=guide_legend(ncol=1,nrow=3,byrow=TRUE),color=guide_legend(ncol=1,nrow=3,byrow=TRUE))+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
?guides
？guide_legend
?guide_legend
ggplot(df2,aes(x=`Average running time (seconds)`,y=Accuracy,color=Algorithm,fill=Dataset))+
geom_boxplot(size = 1) + scale_fill_hue(l=100, c=100,h.start=330)+
scale_x_continuous(breaks = pretty(df2$`Average running time (seconds)`, n = 10)) +
scale_y_continuous(breaks = pretty(df2$Accuracy, n = 10))
ggsave(filename = 'boxplotv.pdf',width = 7, height = 7, units = "in")
ggsave(filename = 'boxplotv.pdf',width = 6, height = 6, units = "in")
ggsave(filename = 'boxplotv.pdf',width = 7, height = 7, units = "in")
ks.test(myfiles[1,1:16],t(myfiles[2,1:16]))# em vs reweighting
ks.test(myfiles[1,1:16],t(myfiles[3,1:16]))# em vs relabeling
ks.test(myfiles[3,1:16],t(myfiles[2,1:16]))# labeling vs reweighting
ks.test(myfiles[5,1:16],t(myfiles[4,1:16]))# em vs relabeling
ks.test(myfiles[1,1:16],t(myfiles[2,1:16]))# em vs reweighting
ks.test(myfiles[1,1:16],t(myfiles[3,1:16]))# em vs relabeling
temp
myfiles
ks.test(myfiles[1,1:16],t(myfiles[2,1:16]))# em vs relabeling
